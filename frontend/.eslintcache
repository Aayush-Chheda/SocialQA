[{"C:\\Users\\User\\Desktop\\SocialQA-New\\SocialQA\\frontend\\src\\index.js":"1","C:\\Users\\User\\Desktop\\SocialQA-New\\SocialQA\\frontend\\src\\store.js":"2","C:\\Users\\User\\Desktop\\SocialQA-New\\SocialQA\\frontend\\src\\App.js":"3","C:\\Users\\User\\Desktop\\SocialQA-New\\SocialQA\\frontend\\src\\serviceWorker.js":"4","C:\\Users\\User\\Desktop\\SocialQA-New\\SocialQA\\frontend\\src\\Reducer\\User.js":"5","C:\\Users\\User\\Desktop\\SocialQA-New\\SocialQA\\frontend\\src\\Action\\User.js":"6","C:\\Users\\User\\Desktop\\SocialQA-New\\SocialQA\\frontend\\src\\components\\QuoraLanding\\AllUser.js":"7","C:\\Users\\User\\Desktop\\SocialQA-New\\SocialQA\\frontend\\src\\components\\QuoraLanding\\index.js":"8","C:\\Users\\User\\Desktop\\SocialQA-New\\SocialQA\\frontend\\src\\components\\auth\\index.js":"9","C:\\Users\\User\\Desktop\\SocialQA-New\\SocialQA\\frontend\\src\\components\\QuoraLanding\\Quorans\\index.js":"10","C:\\Users\\User\\Desktop\\SocialQA-New\\SocialQA\\frontend\\src\\components\\QuoraLanding\\AllSpaces\\index.js":"11","C:\\Users\\User\\Desktop\\SocialQA-New\\SocialQA\\frontend\\src\\components\\QuoraLanding\\QHeader.js":"12","C:\\Users\\User\\Desktop\\SocialQA-New\\SocialQA\\frontend\\src\\Utils\\AlertModal.js":"13","C:\\Users\\User\\Desktop\\SocialQA-New\\SocialQA\\frontend\\src\\Constant\\User.js":"14","C:\\Users\\User\\Desktop\\SocialQA-New\\SocialQA\\frontend\\src\\components\\QuoraLanding\\Quora.js":"15","C:\\Users\\User\\Desktop\\SocialQA-New\\SocialQA\\frontend\\src\\components\\auth\\Login.js":"16","C:\\Users\\User\\Desktop\\SocialQA-New\\SocialQA\\frontend\\src\\components\\QuoraLanding\\Quorans\\UserFeed.js":"17","C:\\Users\\User\\Desktop\\SocialQA-New\\SocialQA\\frontend\\src\\Utils\\decodedToken.js":"18","C:\\Users\\User\\Desktop\\SocialQA-New\\SocialQA\\frontend\\src\\components\\QuoraLanding\\Feed.js":"19","C:\\Users\\User\\Desktop\\SocialQA-New\\SocialQA\\frontend\\src\\components\\QuoraLanding\\Widget.js":"20","C:\\Users\\User\\Desktop\\SocialQA-New\\SocialQA\\frontend\\src\\components\\QuoraLanding\\Sidebar.js":"21","C:\\Users\\User\\Desktop\\SocialQA-New\\SocialQA\\frontend\\src\\components\\QuoraLanding\\Quorans\\UserPost.js":"22","C:\\Users\\User\\Desktop\\SocialQA-New\\SocialQA\\frontend\\src\\components\\QuoraLanding\\QuorBox.js":"23","C:\\Users\\User\\Desktop\\SocialQA-New\\SocialQA\\frontend\\src\\components\\QuoraLanding\\Post.js":"24","C:\\Users\\User\\Desktop\\SocialQA-New\\SocialQA\\frontend\\src\\components\\QuoraLanding\\WidgetContent.js":"25","C:\\Users\\User\\Desktop\\SocialQA-New\\SocialQA\\frontend\\src\\components\\QuoraLanding\\SidebarOptions.js":"26","C:\\Users\\User\\Desktop\\SocialQA-New\\SocialQA\\frontend\\src\\Utils\\timeAgo.js":"27"},{"size":657,"mtime":1640099564171,"results":"28","hashOfConfig":"29"},{"size":916,"mtime":1640099564173,"results":"30","hashOfConfig":"29"},{"size":2986,"mtime":1640099564106,"results":"31","hashOfConfig":"29"},{"size":5004,"mtime":1640099564172,"results":"32","hashOfConfig":"29"},{"size":1912,"mtime":1640099564111,"results":"33","hashOfConfig":"29"},{"size":5242,"mtime":1640099564104,"results":"34","hashOfConfig":"29"},{"size":3524,"mtime":1640099564125,"results":"35","hashOfConfig":"29"},{"size":154,"mtime":1640099564164,"results":"36","hashOfConfig":"29"},{"size":154,"mtime":1640099564169,"results":"37","hashOfConfig":"29"},{"size":1307,"mtime":1640099564153,"results":"38","hashOfConfig":"29"},{"size":1787,"mtime":1640099564124,"results":"39","hashOfConfig":"29"},{"size":7520,"mtime":1640099564134,"results":"40","hashOfConfig":"29"},{"size":2765,"mtime":1640099564112,"results":"41","hashOfConfig":"29"},{"size":769,"mtime":1640099564109,"results":"42","hashOfConfig":"29"},{"size":468,"mtime":1640099564136,"results":"43","hashOfConfig":"29"},{"size":3355,"mtime":1640099564168,"results":"44","hashOfConfig":"29"},{"size":1713,"mtime":1640099564150,"results":"45","hashOfConfig":"29"},{"size":329,"mtime":1640099564114,"results":"46","hashOfConfig":"29"},{"size":1010,"mtime":1640099564128,"results":"47","hashOfConfig":"29"},{"size":364,"mtime":1640099564161,"results":"48","hashOfConfig":"29"},{"size":229,"mtime":1640099564155,"results":"49","hashOfConfig":"29"},{"size":7551,"mtime":1640099564152,"results":"50","hashOfConfig":"29"},{"size":646,"mtime":1640099564135,"results":"51","hashOfConfig":"29"},{"size":7568,"mtime":1640238479159,"results":"52","hashOfConfig":"29"},{"size":1269,"mtime":1640099564163,"results":"53","hashOfConfig":"29"},{"size":2548,"mtime":1640099564158,"results":"54","hashOfConfig":"29"},{"size":312,"mtime":1640238414301,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"cu8ndy",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"58"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"58"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\User\\Desktop\\SocialQA-New\\SocialQA\\frontend\\src\\index.js",[],["113","114"],"C:\\Users\\User\\Desktop\\SocialQA-New\\SocialQA\\frontend\\src\\store.js",[],"C:\\Users\\User\\Desktop\\SocialQA-New\\SocialQA\\frontend\\src\\App.js",[],"C:\\Users\\User\\Desktop\\SocialQA-New\\SocialQA\\frontend\\src\\serviceWorker.js",[],"C:\\Users\\User\\Desktop\\SocialQA-New\\SocialQA\\frontend\\src\\Reducer\\User.js",[],"C:\\Users\\User\\Desktop\\SocialQA-New\\SocialQA\\frontend\\src\\Action\\User.js",[],"C:\\Users\\User\\Desktop\\SocialQA-New\\SocialQA\\frontend\\src\\components\\QuoraLanding\\AllUser.js",[],"C:\\Users\\User\\Desktop\\SocialQA-New\\SocialQA\\frontend\\src\\components\\QuoraLanding\\index.js",[],"C:\\Users\\User\\Desktop\\SocialQA-New\\SocialQA\\frontend\\src\\components\\auth\\index.js",[],"C:\\Users\\User\\Desktop\\SocialQA-New\\SocialQA\\frontend\\src\\components\\QuoraLanding\\Quorans\\index.js",[],"C:\\Users\\User\\Desktop\\SocialQA-New\\SocialQA\\frontend\\src\\components\\QuoraLanding\\AllSpaces\\index.js",[],"C:\\Users\\User\\Desktop\\SocialQA-New\\SocialQA\\frontend\\src\\components\\QuoraLanding\\QHeader.js",["115"],"import React, { useState } from \"react\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport FeaturedPlayListOutlinedIcon from \"@material-ui/icons/FeaturedPlayListOutlined\";\nimport AssignmentTurnedInOutlinedIcon from \"@material-ui/icons/AssignmentTurnedInOutlined\";\nimport PeopleAltOutlinedIcon from \"@material-ui/icons/PeopleAltOutlined\";\nimport NotificationsOutlinedIcon from \"@material-ui/icons/NotificationsOutlined\";\nimport SearchIcon from \"@material-ui/icons/Search\";\n// import logo from \"./img/QAS logo.png\";\nimport { Modal } from \"react-responsive-modal\";\nimport \"react-responsive-modal/styles.css\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nimport \"./QHeader.css\";\nimport { Avatar, Button, Input } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\n// import db, { auth } from \"../firebase\";\nimport { ExpandMore } from \"@material-ui/icons\";\nimport { logout } from \"../../Action/User\";\nimport axios from \"axios\";\nimport { token } from \"../../Utils/decodedToken\";\nimport { successModal } from \"../../Utils/AlertModal\";\n\nfunction QHeader() {\n  // const user = useSelector(selectUser);\n  const dispatch = useDispatch();\n\n  const [IsmodalOpen, setIsModalOpen] = useState(false);\n  const [input, setInput] = useState(\"\");\n  const [inputUrl, setInputUrl] = useState(\"\");\n  const userLogin = useSelector((state) => state.userLogin);\n\n  // console.log(userLogin?.userInfo?.userId);\n\n  const Close = (\n    <CloseIcon\n      style={{\n        color: \"red\",\n        border: \" 2px solid lightgray\",\n        borderRadius: \"3px\",\n      }}\n    />\n  );\n\n  const handleQuestion = async (e) => {\n    e.preventDefault();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: token,\n      },\n    };\n    if (input !== \"\") {\n      const body = {\n        questionName: input,\n        questionUrl: inputUrl,\n        userId: userLogin?.userInfo?.userId\n      };\n      await axios\n        .post(\"/api/questions\", body, config)\n        .then((res) => {\n          console.log(res.data);\n          console.log(\"question added successfully\");\n          setIsModalOpen(false);\n          successModal('Question added successfully')\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n\n    setInput(\"\");\n    setInputUrl(\"\");\n  };\n\n  const handleLogout = () => {\n    \n      dispatch(logout());\n      //alert(\"Logged out successfully\");\n  };\n\n  return (\n    <div className=\"qHeader\">\n      <div className=\"qHeader-content\">\n        <div className=\"qHeader__logo\">\n            <img\n            src=\"https://i.postimg.cc/zDsCrXv8/Social-QA-horizontal.png\"\n            alt=\"\"\n            />\n        </div>\n        <div className=\"qHeader__icons\">\n            <div onClick = {() => window.location.href = '/'} className=\"active qHeader__icon\">\n            <HomeIcon />\n            </div>\n            <div onClick = {() => window.location.href = '/allSpaces'} className=\"qHeader__icon\">\n            <FeaturedPlayListOutlinedIcon />\n            </div>\n            <div onClick = {() => window.location.href = '/myQuestions'} className=\"qHeader__icon\">\n            <AssignmentTurnedInOutlinedIcon />\n            </div>\n            <div onClick = {() => window.location.href = '/allUsers'} className=\"qHeader__icon\">\n            <PeopleAltOutlinedIcon />\n            </div>\n            {/* <div onClick = {() => window.location.href = '/notifications'} className=\"qHeader__icon\">\n            <NotificationsOutlinedIcon />\n            </div> */}\n        </div>\n        <div className=\"qHeader__input\">\n            <SearchIcon />\n            <input type=\"text\" placeholder=\"Search Question\" />\n        </div>\n        <div className=\"qHeader__Rem\">\n            <div className=\"qHeader__avatar\">\n            <Avatar\n                onClick={handleLogout}\n                className=\"Avatar\"\n                src={\n                // user.photo\n                //     ? user.photo\n                //     : \n                \"https://images-platform.99static.com//_QXV_u2KU7-ihGjWZVHQb5d-yVM=/238x1326:821x1909/fit-in/500x500/99designs-contests-attachments/119/119362/attachment_119362573\"\n                }\n            />\n            </div>\n\n            <Button onClick={() => setIsModalOpen(true)}>Add Question</Button>\n            <Modal\n            // isOpen={IsmodalOpen}\n            // onRequestClose={() => setIsModalOpen(false)}\n            // shouldCloseOnOverlayClick={false}\n                open={IsmodalOpen}\n                onClose={() => setIsModalOpen(false)}\n                closeOnEsc\n                closeIcon={Close}\n                closeOnOverlayClick={false}\n                center\n                style={{\n                    overlay: {\n                    width: 700,\n                    height: 600,\n                    backgroundColor: \"rgba(0,0,0,0.8)\",\n                    zIndex: \"1000\",\n                    top: \"50%\",\n                    left: \"50%\",\n                    marginTop: \"-300px\",\n                    marginLeft: \"-350px\",\n                    },\n                }}\n            >\n            <div className=\"modal__title\">\n              <h5>Add Question</h5>\n              <h5>Share Link</h5>\n            </div>\n            <div className=\"modal__info\">\n              <Avatar\n                className=\"avatar\"\n                src={\n                  \"https://i.postimg.cc/FsLV3Qq7/c3a1f7f2b9b54019b0822b116243a3fa.png\"\n                }\n              />\n              {/* <img src=\"http://tinygraphs.com/squares/helloworld\" /> */}\n              {/* <p>{user?.disPlayName ? user?.disPlayName : user?.email} asked</p> */}\n              <div className=\"modal__scope\">\n                <PeopleAltOutlinedIcon />\n                <p>Public</p>\n                <ExpandMore />\n              </div>\n            </div>\n            <div className=\"modal__Field\">\n              <Input\n                value={input}\n                onChange={(e) => setInput(e.target.value)}\n                type=\"text\"\n                placeholder=\"Start your question with 'What', 'How', 'Why', etc. \"\n              />\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                }}\n                className=\"modal__fieldLink\"\n              >\n                {/* <Link /> */}\n                <input\n                  style={{\n                    width: \"100%\",\n                    margin: \"5px 0\",\n                    border: \"1px solid lightgray\",\n                    padding: \"10px\",\n                    outline: \"2px solid #000\",\n                  }}\n                  value={inputUrl}\n                  onChange={(e) => setInputUrl(e.target.value)}\n                  type=\"text\"\n                  placeholder=\"Optional: inclue a link that gives context\"\n                ></input>\n                {inputUrl !== \"\" && (\n                  <img style={{\n                    height: \"40vh\",\n                    objectFit: \"contain\"\n                  }} src={inputUrl} alt=\"\"></img>\n                )}\n              </div>\n            </div>\n            <div className=\"modal__buttons\">\n              <button className=\"cancle\" onClick={() => setIsModalOpen(false)}>\n                Cancel\n              </button>\n              <button type=\"sumbit\" onClick={handleQuestion} className=\"add\">\n                Add Question\n              </button>\n            </div>\n          </Modal>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default QHeader;\n","C:\\Users\\User\\Desktop\\SocialQA-New\\SocialQA\\frontend\\src\\Utils\\AlertModal.js",[],"C:\\Users\\User\\Desktop\\SocialQA-New\\SocialQA\\frontend\\src\\Constant\\User.js",[],"C:\\Users\\User\\Desktop\\SocialQA-New\\SocialQA\\frontend\\src\\components\\QuoraLanding\\Quora.js",[],"C:\\Users\\User\\Desktop\\SocialQA-New\\SocialQA\\frontend\\src\\components\\auth\\Login.js",[],"C:\\Users\\User\\Desktop\\SocialQA-New\\SocialQA\\frontend\\src\\components\\QuoraLanding\\Quorans\\UserFeed.js",[],"C:\\Users\\User\\Desktop\\SocialQA-New\\SocialQA\\frontend\\src\\Utils\\decodedToken.js",[],"C:\\Users\\User\\Desktop\\SocialQA-New\\SocialQA\\frontend\\src\\components\\QuoraLanding\\Feed.js",[],"C:\\Users\\User\\Desktop\\SocialQA-New\\SocialQA\\frontend\\src\\components\\QuoraLanding\\Widget.js",[],"C:\\Users\\User\\Desktop\\SocialQA-New\\SocialQA\\frontend\\src\\components\\QuoraLanding\\Sidebar.js",[],"C:\\Users\\User\\Desktop\\SocialQA-New\\SocialQA\\frontend\\src\\components\\QuoraLanding\\Quorans\\UserPost.js",["116"],"import { Avatar } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport \"../Post.css\";\nimport ArrowUpwardOutlinedIcon from \"@material-ui/icons/ArrowUpwardOutlined\";\nimport ArrowDownwardOutlinedIcon from \"@material-ui/icons/ArrowDownwardOutlined\";\nimport RepeatOutlinedIcon from \"@material-ui/icons/RepeatOutlined\";\nimport ChatBubbleOutlineOutlinedIcon from \"@material-ui/icons/ChatBubbleOutlineOutlined\";\nimport { MoreHorizOutlined, ShareOutlined } from \"@material-ui/icons\";\nimport { useSelector } from \"react-redux\";\nimport { Modal } from \"react-responsive-modal\";\nimport parse from 'html-react-parser';\n\nimport ReactQuill from \"react-quill\";\nimport \"react-quill/dist/quill.snow.css\";\nimport \"react-responsive-modal/styles.css\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport TimeAdded from \"../../../Utils/timeAgo\";\nimport { token } from \"../../../Utils/decodedToken\";\nimport axios from \"axios\";\n\nfunction Post({ questionId, key, question, imageUrl, timestamp, users, answers, length }) {\n  \n  const userLogin = useSelector((state) => state.userLogin);\n\n  const [IsmodalOpen, setIsModalOpen] = useState(false);\n  // const questionId = useSelector(selectQuestionId);\n  const [answer, setAnswer] = useState(\"\");\n  const [getAnswers] = useState(answers);\n\n  // console.log(answers)\n\n  const Close = (\n    <CloseIcon\n      style={{\n        color: \"red\",\n        border: \" 2px solid lightgray\",\n        borderRadius: \"3px\",\n      }}\n    />\n  );\n\n  const handleQuill = (value) => {\n    setAnswer(value);\n  };\n\n  const handleModal = () => {\n    setIsModalOpen(true);\n    console.log(questionId);\n  };\n\n  const handleAnswer = async (e) => {\n    e.preventDefault();\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: token,\n      },\n    };\n    if (answer !== \"\") {\n      const body = {\n        answer: answer,\n        questionId: questionId,\n        userDetails: {\n          role: userLogin?.userInfo?.role,\n          userEmail: userLogin?.userInfo?.userEmail,\n          userId: userLogin?.userInfo?.userId,\n        },\n      };\n\n      await axios\n        .post(`/api/answers`, body, config)\n        .then((res) => {\n          console.log(res.data);\n          alert('Answer added succesfully')\n          setIsModalOpen(false)\n          window.location.href = '/'\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  };\n  return (<>\n  {\n      length !== 0 ? (<>\n      <div\n      key={key}\n      className=\"post\"\n      // onClick={() =>\n      //   // dispatch(\n      //   //   setQuestionInfo({\n      //   //     questionId: Id,\n      //   //     questionName: question,\n      //   //   })\n      //   // )\n      // }\n    >\n      <div className=\"post__info\">\n        <Avatar\n          src={\n            \"https://i.postimg.cc/FsLV3Qq7/c3a1f7f2b9b54019b0822b116243a3fa.png\"\n          }\n        />\n        <h4>{users?.name ? users?.name : users?.email}</h4>\n        {timestamp && (\n          <small>\n            <TimeAdded date={timestamp} />\n          </small>\n        )}\n      </div>\n      <div className=\"post__body\">\n        <div className=\"post__question\">\n          <p>{question}</p>\n          <button onClick={handleModal} className=\"post__btnAnswer\">\n            Answer\n          </button>\n\n          <Modal\n            open={IsmodalOpen}\n            onClose={() => setIsModalOpen(false)}\n            closeOnEsc={true}\n            center\n            closeOnOverlayClick={false}\n            closeIcon={Close}\n          >\n            <div className=\"modal__question\">\n              <h1>{question}</h1>\n              <p>\n                asked by{\" \"}\n                <span className=\"name\">\n                  {users?.name ? users?.name : users?.email}\n                </span>{\" \"}\n                {\"\"}\n                on{\" \"}\n                <span className=\"name\">\n                  {/* {timestamp && (\n                    <small>\n                      <TimeAdded date={timestamp} />\n                    </small>\n                  )} */}\n                  {new Date(timestamp).toLocaleString()}\n                </span>\n              </p>\n            </div>\n            <div className=\"modal__answer\">\n              <ReactQuill\n                value={answer}\n                onChange={handleQuill}\n                placeholder=\"Enter your answer\"\n              ></ReactQuill>\n            </div>\n            <div className=\"modal__button\">\n              <button className=\"cancle\" onClick={() => setIsModalOpen(false)}>\n                Cancel\n              </button>\n              <button type=\"sumbit\" onClick={handleAnswer} className=\"add\">\n                Add Answer\n              </button>\n            </div>\n          </Modal>\n        </div>\n        <img style = {{\n          width: \"100%\",\n          objectFit: \"contain\"\n        }} src={imageUrl} alt=\"\" />\n        <div className=\"post__footer\">\n        <div className=\"post__footerAction\">\n          <ArrowUpwardOutlinedIcon />\n          <ArrowDownwardOutlinedIcon />\n        </div>\n\n        <RepeatOutlinedIcon />\n        <ChatBubbleOutlineOutlinedIcon />\n        <div className=\"post__footerLeft\">\n          <ShareOutlined />\n          <MoreHorizOutlined />\n        </div>\n      </div>\n        <p style = {{\n          color: \"rgba(0,0,0,0.5)\",\n          fontSize: \"12px\",\n          fontWeight: \"bold\",\n          margin: \"10px 0\"\n        }}>{answers.length} {`${answers.length < 2 ? 'Answer' : 'Answers'}`}</p>\n        <div style = {{\n              margin: \"5px 0px 0px 0px\",\n              padding: \"5px 0px 0px 20px\",\n              borderTop: \"1px solid lightgray\",\n            }} className=\"post__answer\">\n              \n          {\n            // answer comes here\n            getAnswers.map((_answer) => (<>\n            <div style = {{\n              display: \"flex\",\n              flexDirection: \"column\",\n              width: \"100%\",\n              padding: \"10px 5px\",\n              borderTop: \"1px solid lightgray\",\n            }} className = 'post-answer-container'>\n              <div style = {{\n                display: \"flex\",\n                alignItems: \"center\",\n                marginBottom: \"10px\",fontSize: '12px',\n                fontWeight: \"600\",\n                color: \"#888\"\n              }} className = 'post-answered'>\n                <Avatar src = {\n                  \"https://i.postimg.cc/FsLV3Qq7/c3a1f7f2b9b54019b0822b116243a3fa.png\"\n                } />\n                <div style = {{\n                  margin: \"0px 10px\"\n                }} className = 'post-info'>\n                  \n                  <p style = {{\n                    margin: \"5px 0\"\n                  }}>{_answer?.userDetails?.userName ? _answer?.userDetails?.userName : _answer?.userDetails?.userEmail}</p>\n                  {\n                    _answer?.createdAt &&\n                    <span><TimeAdded date = {_answer.createdAt} /></span>\n                  }\n                  \n                </div>\n              </div>\n              <div className = 'post-answer'>\n                {parse(_answer.answer)}\n              </div>\n            </div>\n            </>))\n          }\n        </div>\n      </div>\n      \n    </div>\n      </>) : (<>\n      <img style = {{\n        //   padding: '20px',\n          borderRadius: \"10px\",\n          boxShadow: '2px 2px 12px lightgray'\n      }} width = {400} src = 'https://image.freepik.com/free-vector/empty-concept-illustration_114360-1188.jpg' alt = 'no question' />\n      </>)\n      }\n  </>\n      \n    \n  );\n}\n\nexport default Post;\n","C:\\Users\\User\\Desktop\\SocialQA-New\\SocialQA\\frontend\\src\\components\\QuoraLanding\\QuorBox.js",[],"C:\\Users\\User\\Desktop\\SocialQA-New\\SocialQA\\frontend\\src\\components\\QuoraLanding\\Post.js",["117","118"],"C:\\Users\\User\\Desktop\\SocialQA-New\\SocialQA\\frontend\\src\\components\\QuoraLanding\\WidgetContent.js",[],"C:\\Users\\User\\Desktop\\SocialQA-New\\SocialQA\\frontend\\src\\components\\QuoraLanding\\SidebarOptions.js",[],"C:\\Users\\User\\Desktop\\SocialQA-New\\SocialQA\\frontend\\src\\Utils\\timeAgo.js",[],{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","severity":1,"message":"124","line":6,"column":8,"nodeType":"125","messageId":"126","endLine":6,"endColumn":33},{"ruleId":"123","severity":1,"message":"127","line":2,"column":17,"nodeType":"125","messageId":"126","endLine":2,"endColumn":26},{"ruleId":"123","severity":1,"message":"128","line":9,"column":10,"nodeType":"125","messageId":"126","endLine":9,"endColumn":21},{"ruleId":"123","severity":1,"message":"129","line":31,"column":22,"nodeType":"125","messageId":"126","endLine":31,"endColumn":35},"no-native-reassign",["130"],"no-negated-in-lhs",["131"],"no-unused-vars","'NotificationsOutlinedIcon' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useDispatch' is defined but never used.","'setGetAnswers' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]